(function(){"use strict";TS.registerModule("clog",{onStart:function(){var interval_duration_ms=30*1e3;var interval_duration_noise_ms=5*1e3;var noise_ms=Math.floor(Math.random()*interval_duration_noise_ms);setInterval(_sendDataAndEmptyQueue,interval_duration_ms+noise_ms);$(window).on("beforeunload",_sendDataAndEmptyQueue);$("body").on("click",'[data-clog-click="true"]',_onClick)},setUser:function(id){_user_id=id},setTeam:function(id){_team_id=id},track:function(event,args){_recordLog(event,args)},trackClick:function(selector,event,args){$(selector).on("click",function(){_recordLog(event,args)})},trackForm:function(selector,event,args){$(selector).on("submit",function(){_recordLog(event,args)})},flush:function(){_sendDataAndEmptyQueue()},test:function(){return{createLogURLs:_createLogURLs,sendDataAndEmptyQueue:_sendDataAndEmptyQueue,detectClogEndpoint:_detectClogEndpoint,getLogs:function(){return _logs},getClogEndpoint:function(){return _CLOG_ENDPOINT_URL},reset:function(){_logs=[];_CLOG_ENDPOINT_URL=undefined}}},parseParams:function(params){if(!params)return{};params=params.split(",");var args={};var i=0;var len=params.length;var arg;for(i;i<len;i++){arg=params[i].split("=");args[arg[0]]=arg[1]}return args}});var _CLOG_ENDPOINT_URL;var _MAX_URL_LENGTH=2e3;var _LOG_PRI=1e3;var _logs=[];var _team_id;var _user_id;var _detectClogEndpoint=function(host){var is_dev=host.match(/^([^.]+\.)?(?:enterprise\.)?(dev[0-9]*)\.slack.com/);var is_qa=host.match(/^([^.]+\.)?(?:enterprise\.)?(qa[0-9]*)\.slack.com/);if(is_dev){_CLOG_ENDPOINT_URL="https://"+is_dev[2]+".slack.com/clog/track/"}else if(is_qa){_CLOG_ENDPOINT_URL="https://"+is_qa[2]+".slack.com/clog/track/"}else if(host.match(/^([^.]+\.)?staging.slack.com/)){_CLOG_ENDPOINT_URL="https://staging.slack.com/clog/track/"}else{_CLOG_ENDPOINT_URL="https://slack.com/clog/track/"}};var _recordLog=function(event,args){if(typeof event!=="string")return;if(!args)args=null;var payload={tstamp:Date.now(),event:event,args:args};if(_team_id)payload["team_id"]=_team_id;if(_user_id)payload["user_id"]=_user_id;if(TS.model){if(TS.model.team&&TS.model.team.id)payload["team_id"]=TS.model.team.id;if(TS.model.user&&TS.model.user.id)payload["user_id"]=TS.model.user.id}_logs.push(payload);if(TS.log)TS.log(_LOG_PRI,"Event called:",event,args)};var _sendDataAndEmptyQueue=function(){if(_logs.length===0)return;if(TS.log)TS.log(_LOG_PRI,"Sending clog data, emptying queue");if(TS.log)TS.log(_LOG_PRI,"Logs: ",_logs);var log_urls=_createLogURLs(_logs);var log_url;for(var i=0;i<log_urls.length;i++){log_url=log_urls[i];var log=new Image;log.src=log_url;if(TS.log)TS.log(_LOG_PRI,"Logged event: "+log_url)}_logs=[]};var _createLogURLs=function(logs){if(!_CLOG_ENDPOINT_URL)_detectClogEndpoint(location.host);var urls=[];var data=[];var url="";var makeUrl=function(log_data){return _CLOG_ENDPOINT_URL+"?logs="+encodeURIComponent(JSON.stringify(log_data))};var log;for(var i=0;i<logs.length;i++){log=logs[i];data.push(log);url=makeUrl(data);if(url.length>_MAX_URL_LENGTH){data.pop();urls.push(makeUrl(data));data=[log]}}urls.push(makeUrl(data));if(TS.log)TS.log(_LOG_PRI,"URLs:",urls);return urls};var _onClick=function(e){var event=this.getAttribute("data-clog-event");if(!event){if(TS.warn)TS.warn("Logging clicks with data-clog-click requires a data-clog-event attribute");return}var params=this.getAttribute("data-clog-params");var args=TS.clog.parseParams(params);TS.clog.track(event,args)}})();
